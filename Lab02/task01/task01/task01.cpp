/*
Продолжаем делать калькулятор. Числа могут быть только целыми: положительными и отрицательными.
1. Попросите пользователя ввести константы, с которыми он хочет работать. 
Важно: не спрашивайте сколько будет таких констант, заранее их кол-во неизвестно. 
2. Пользователь продолжает вводить константы, пока не введет слово фразу end.
После этого попросите его ввести действия, которые нужно произвести с числами в одну строку
через пробел.
3. Вычислите заданное выражение. 
Приоритет операций выставляется в порядке их задания пользователем 
(т.е. игнорируйте приоритет операций).
*/
#include "pch.h" 
#include <iostream> 
using namespace std;
int i, n;
int main()
{
	setlocale(LC_ALL, "RUS");
	char *symb = new char[100];
	char *znach = new char[100];
	cout << "Через пробел введите переменные, с которыми Вы хотите произвести операцию. (end - завершение ввода) \n";
	for (i = 0; i < 99; i++)
	{
		n = n + 1;
		cin >> symb[i];
		if ((symb[i] == 'd') && (symb[i - 1] == 'n') && (symb[i - 2] == 'e'))
		{
			if (i < 4)
			{
				cout << "Количество чисел должно быть не меньше 2! \n";
				continue;
			}
			else
			{
				break;
			}
		}
	}
	int r = symb[0] - 48;
	cout << "Отлично, а теперь введите действия с указанными переменными (+ * - /)" << endl;
	for (i = 0; i < n - 4; i++)
	{
		cin >> znach[i];
	}
	for (i = 0; i < n - 4; i++)
	{
		switch (znach[i])
		{
		case '+':
			r = r + (symb[i+1]-48);
			break;
		case '-':
			r = r - (symb[i+1]-48);
			break;
		case '*':
			r = r * (symb[i+1]-48);
			break;
		case '/':
			r = r / (symb[i+1]-48);
			break;
		default:
			break;
		}
	}
	cout << "Ваш результат:" << r;
	delete[] symb;
	delete[] znach;
}